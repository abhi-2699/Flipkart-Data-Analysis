{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Flipkart-data-factory"
		},
		"ConnectBatchPool_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'ConnectBatchPool'"
		},
		"ConnectFlipkartDatasetUsingBatchAccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ConnectFlipkartDatasetUsingBatchAccount'"
		},
		"ConnectFlipkartStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ConnectFlipkartStorage'"
		},
		"ConnectBatchPool_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://flipkartresrouces.eastus.batch.azure.com"
		},
		"ConnectBatchPool_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "ResourcePool"
		},
		"ConnectBatchPool_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "flipkartresrouces"
		},
		"ConnectFlipkartStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://flipkartdataset.dfs.core.windows.net/"
		},
		"ConnectKaggle_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.kaggle.com/api/v1/datasets/download/iyumrahul/flipkartsalesdataset"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CLEANUP_PIPELINE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteCleaned",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CleanedDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ConnectFlipkartStorage",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CleanedDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/ConnectFlipkartStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLIPKART_PIPELINE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Dataset",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "01-raw//archive"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_bk9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_bk9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Unzip",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "Download Dataset",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "cmd /C python extract.py",
							"resourceLinkedService": {
								"referenceName": "ConnectFlipkartDatasetUsingBatchAccount",
								"type": "LinkedServiceReference"
							},
							"folderPath": "00-scripts",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "ConnectBatchPool",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CleanFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Unzip",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CleanFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"LoadProducts": {},
									"LoadSales": {},
									"DumpProductsData": {},
									"DumpSalesData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_bk9')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_bk9')]",
				"[concat(variables('factoryId'), '/linkedServices/ConnectFlipkartDatasetUsingBatchAccount')]",
				"[concat(variables('factoryId'), '/linkedServices/ConnectBatchPool')]",
				"[concat(variables('factoryId'), '/dataflows/CleanFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CleanedDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectFlipkartStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "03-cleaned"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectFlipkartStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_bk9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectFlipkartStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "archive",
						"fileSystem": "01-raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectFlipkartStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_bk9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectKaggle",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectKaggle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConnectBatchPool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('ConnectBatchPool_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('ConnectBatchPool_properties_typeProperties_poolName')]",
					"accountName": "[parameters('ConnectBatchPool_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "ConnectFlipkartDatasetUsingBatchAccount",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('ConnectBatchPool_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectFlipkartDatasetUsingBatchAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConnectFlipkartDatasetUsingBatchAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ConnectFlipkartDatasetUsingBatchAccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConnectFlipkartStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ConnectFlipkartStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ConnectFlipkartStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConnectKaggle')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ConnectKaggle_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CleanFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ConnectFlipkartStorage",
								"type": "LinkedServiceReference"
							},
							"name": "LoadProducts"
						},
						{
							"linkedService": {
								"referenceName": "ConnectFlipkartStorage",
								"type": "LinkedServiceReference"
							},
							"name": "LoadSales"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ConnectFlipkartStorage",
								"type": "LinkedServiceReference"
							},
							"name": "DumpProductsData"
						},
						{
							"linkedService": {
								"referenceName": "ConnectFlipkartStorage",
								"type": "LinkedServiceReference"
							},
							"name": "DumpSalesData"
						}
					],
					"transformations": [
						{
							"name": "RemoveID"
						},
						{
							"name": "AddSaleID"
						},
						{
							"name": "ColumnRename"
						},
						{
							"name": "FilterRegion"
						},
						{
							"name": "ReorderColumnNames"
						},
						{
							"name": "AddProductID"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {_col0_} as short,",
						"          {_col1_} as integer,",
						"          {_col2_} as string,",
						"          {_col3_} as string,",
						"          {_col4_} as string,",
						"          {_col5_} as string,",
						"          {_col6_} as string,",
						"          {_col7_} as string,",
						"          {_col8_} as string,",
						"          {_col9_} as string,",
						"          {_col10_} as short,",
						"          {_col11_} as short,",
						"          {_col12_} as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: '02-extracted',",
						"     fileName: 'products.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     skipLines: 1,",
						"     multiLineRow: true) ~> LoadProducts",
						"source(output(",
						"          {_col0_} as short,",
						"          {_col1_} as short,",
						"          {_col2_} as short,",
						"          {_col3_} as date,",
						"          {_col4_} as string,",
						"          {_col5_} as integer,",
						"          {_col6_} as integer,",
						"          {_col7_} as integer,",
						"          {_col8_} as short,",
						"          {_col9_} as double,",
						"          {_col10_} as double,",
						"          {_col11_} as integer,",
						"          {_col12_} as double",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: '02-extracted',",
						"     fileName: 'Sales.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     skipLines: 1) ~> LoadSales",
						"LoadSales select(mapColumn(",
						"          date = {_col3_},",
						"          city_name = {_col4_},",
						"          order_id = {_col5_},",
						"          cart_id = {_col6_},",
						"          dim_customer_key = {_col7_},",
						"          procured_quantity = {_col8_},",
						"          unit_selling_price = {_col9_},",
						"          total_discount_amount = {_col10_},",
						"          product_id = {_col11_},",
						"          total_weighted_landing_price = {_col12_}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveID",
						"FilterRegion keyGenerate(output(id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> AddSaleID",
						"AddProductID select(mapColumn(",
						"          id,",
						"          product_id = {_col1_},",
						"          product_name = {_col2_},",
						"          unit = {_col3_},",
						"          product_type = {_col4_},",
						"          brand_name = {_col5_},",
						"          manufacturer_name = {_col6_},",
						"          l0_category = {_col7_},",
						"          l1_category = {_col8_},",
						"          l2_category = {_col9_},",
						"          l0_category_id = {_col10_},",
						"          l1_category_id = {_col11_},",
						"          l2_category_id = {_col12_}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ColumnRename",
						"RemoveID filter(city_name == \"Delhi\") ~> FilterRegion",
						"AddSaleID select(mapColumn(",
						"          id,",
						"          date,",
						"          city_name,",
						"          order_id,",
						"          cart_id,",
						"          dim_customer_key,",
						"          procured_quantity,",
						"          unit_selling_price,",
						"          total_discount_amount,",
						"          product_id,",
						"          total_weighted_landing_price",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ReorderColumnNames",
						"LoadProducts keyGenerate(output(id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> AddProductID",
						"ColumnRename sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: '03-cleaned',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DumpProductsData",
						"ReorderColumnNames sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: '03-cleaned',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DumpSalesData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectFlipkartStorage')]"
			]
		}
	]
}